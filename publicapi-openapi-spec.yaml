openapi: 3.1.0
info:
  title: svrelay.public
paths:
  /v1/teams/{team_id}/tickets:
    get:
      tags:
        - svrelay.public.PublicAPIService
      summary: ListTickets
      operationId: svrelay.public.PublicAPIService.ListTickets
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: string
            title: team_id
        - name: startTime.seconds
          in: query
          description: |-
            Represents seconds of UTC time since Unix epoch
             1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
             9999-12-31T23:59:59Z inclusive.
          schema:
            type:
              - integer
              - string
            title: seconds
            format: int64
            description: |-
              Represents seconds of UTC time since Unix epoch
               1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
               9999-12-31T23:59:59Z inclusive.
        - name: startTime.nanos
          in: query
          description: |-
            Non-negative fractions of a second at nanosecond resolution. Negative
             second values with fractions must still have non-negative nanos values
             that count forward in time. Must be from 0 to 999,999,999
             inclusive.
          schema:
            type: integer
            title: nanos
            format: int32
            description: |-
              Non-negative fractions of a second at nanosecond resolution. Negative
               second values with fractions must still have non-negative nanos values
               that count forward in time. Must be from 0 to 999,999,999
               inclusive.
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/svrelay.public.ListTicketsResponse'
  /v1/teams/{team_id}/ticket:
    post:
      tags:
        - svrelay.public.PublicAPIService
      summary: CreateTicket
      operationId: svrelay.public.PublicAPIService.CreateTicket
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: string
            title: team_id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  title: name
                description:
                  type: string
                  title: description
                createdByUserId:
                  type: string
                  title: created_by_user_id
                createdAt:
                  title: created_at
                  $ref: '#/components/schemas/google.protobuf.Timestamp'
                assignedToUserId:
                  type: string
                  title: assigned_to_user_id
                  nullable: true
              title: CreateTicketRequest
              additionalProperties: false
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/svrelay.public.CreateTicketResponse'
  /v1/teams/{team_id}/ticket/{ticket_id}/message:
    post:
      tags:
        - svrelay.public.PublicAPIService
      summary: CreateMessage
      operationId: svrelay.public.PublicAPIService.CreateMessage
      parameters:
        - name: team_id
          in: path
          required: true
          schema:
            type: string
            title: team_id
        - name: ticket_id
          in: path
          required: true
          schema:
            type: string
            title: ticket_id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  title: message
                authorUserId:
                  type: string
                  title: author_user_id
                createdAt:
                  title: created_at
                  $ref: '#/components/schemas/google.protobuf.Timestamp'
              title: CreateMessageRequest
              additionalProperties: false
        required: true
      responses:
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/svrelay.public.CreateMessageResponse'
components:
  schemas:
    svhelp.models.TicketEscalationLevel:
      type: string
      title: TicketEscalationLevel
      enum:
        - AI
        - HUMAN
    svhelp.models.TicketPriority:
      type: string
      title: TicketPriority
      enum:
        - TICKET_PRIORITY_UNSPECIFIED
        - NONE
        - LOW
        - MEDIUM
        - HIGH
        - URGENT
    svhelp.models.TicketStatusGroup:
      type: string
      title: TicketStatusGroup
      enum:
        - TICKET_STATUS_GROUP_UNSPECIFIED
        - TODO
        - IN_PROGRESS
        - DONE
        - CANCELED
    google.protobuf.Timestamp:
      type: string
      examples:
        - 1s
        - 1.000340012s
      format: date-time
      description: |-
        A Timestamp represents a point in time independent of any time zone or local
         calendar, encoded as a count of seconds and fractions of seconds at
         nanosecond resolution. The count is relative to an epoch at UTC midnight on
         January 1, 1970, in the proleptic Gregorian calendar which extends the
         Gregorian calendar backwards to year one.

         All minutes are 60 seconds long. Leap seconds are "smeared" so that no leap
         second table is needed for interpretation, using a [24-hour linear
         smear](https://developers.google.com/time/smear).

         The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By
         restricting to that range, we ensure that we can convert to and from [RFC
         3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.

         # Examples

         Example 1: Compute Timestamp from POSIX `time()`.

             Timestamp timestamp;
             timestamp.set_seconds(time(NULL));
             timestamp.set_nanos(0);

         Example 2: Compute Timestamp from POSIX `gettimeofday()`.

             struct timeval tv;
             gettimeofday(&tv, NULL);

             Timestamp timestamp;
             timestamp.set_seconds(tv.tv_sec);
             timestamp.set_nanos(tv.tv_usec * 1000);

         Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.

             FILETIME ft;
             GetSystemTimeAsFileTime(&ft);
             UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;

             // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z
             // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.
             Timestamp timestamp;
             timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));
             timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));

         Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.

             long millis = System.currentTimeMillis();

             Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)
                 .setNanos((int) ((millis % 1000) * 1000000)).build();

         Example 5: Compute Timestamp from Java `Instant.now()`.

             Instant now = Instant.now();

             Timestamp timestamp =
                 Timestamp.newBuilder().setSeconds(now.getEpochSecond())
                     .setNanos(now.getNano()).build();

         Example 6: Compute Timestamp from current time in Python.

             timestamp = Timestamp()
             timestamp.GetCurrentTime()

         # JSON Mapping

         In JSON format, the Timestamp type is encoded as a string in the
         [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the
         format is "{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z"
         where {year} is always expressed using four digits while {month}, {day},
         {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional
         seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),
         are optional. The "Z" suffix indicates the timezone ("UTC"); the timezone
         is required. A proto3 JSON serializer should always use UTC (as indicated by
         "Z") when printing the Timestamp type and a proto3 JSON parser should be
         able to accept both UTC and other timezones (as indicated by an offset).

         For example, "2017-01-15T01:30:15.01Z" encodes 15.01 seconds past
         01:30 UTC on January 15, 2017.

         In JavaScript, one can convert a Date object to this format using the
         standard
         [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)
         method. In Python, a standard `datetime.datetime` object can be converted
         to this format using
         [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with
         the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use
         the Joda Time's [`ISODateTimeFormat.dateTime()`](
         http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()
         ) to obtain a formatter capable of generating timestamps in this format.
    svhelp.models.LabelOption:
      type: object
      properties:
        id:
          type: string
          title: id
        teamId:
          type: string
          title: team_id
        name:
          type: string
          title: name
        description:
          type: string
          title: description
      title: LabelOption
      additionalProperties: false
    svhelp.models.PriorityOption:
      type: object
      properties:
        id:
          type: string
          title: id
        teamId:
          type: string
          title: team_id
        priority:
          title: priority
          $ref: '#/components/schemas/svhelp.models.TicketPriority'
        description:
          type: string
          title: description
      title: PriorityOption
      additionalProperties: false
    svhelp.models.StatusOption:
      type: object
      properties:
        id:
          type: string
          title: id
        teamId:
          type: string
          title: team_id
        statusGroup:
          title: status_group
          $ref: '#/components/schemas/svhelp.models.TicketStatusGroup'
        name:
          type: string
          title: name
        description:
          type: string
          title: description
        isDefault:
          type: boolean
          title: is_default
      title: StatusOption
      additionalProperties: false
    svhelp.pubapimodels.Team:
      type: object
      properties:
        id:
          type: string
          title: id
        name:
          type: string
          title: name
      title: Team
      additionalProperties: false
    svhelp.pubapimodels.Ticket:
      type: object
      properties:
        id:
          type: string
          title: id
        friendlyIdentifier:
          type: string
          title: friendly_identifier
        forTeam:
          title: for_team
          $ref: '#/components/schemas/svhelp.pubapimodels.Team'
        name:
          type: string
          title: name
        description:
          type: string
          title: description
        createdAt:
          title: created_at
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        completedAt:
          title: completed_at
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        escalatedAt:
          title: escalated_at
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        createdByUser:
          title: created_by_user
          $ref: '#/components/schemas/svhelp.pubapimodels.User'
        assignedToUser:
          title: assigned_to_user
          nullable: true
          $ref: '#/components/schemas/svhelp.pubapimodels.User'
        status:
          title: status
          $ref: '#/components/schemas/svhelp.models.StatusOption'
        escalationLevel:
          title: escalation_level
          $ref: '#/components/schemas/svhelp.models.TicketEscalationLevel'
        priority:
          title: priority
          $ref: '#/components/schemas/svhelp.models.PriorityOption'
        slaStartedAt:
          title: sla_started_at
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        slaBreachesAt:
          title: sla_breaches_at
          nullable: true
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/svhelp.models.LabelOption'
          title: labels
      title: Ticket
      additionalProperties: false
    svhelp.pubapimodels.User:
      type: object
      properties:
        id:
          type: string
          title: id
        email:
          type: string
          title: email
      title: User
      additionalProperties: false
    svrelay.public.CreateMessageRequest:
      type: object
      properties:
        teamId:
          type: string
          title: team_id
        ticketId:
          type: string
          title: ticket_id
        message:
          type: string
          title: message
        authorUserId:
          type: string
          title: author_user_id
        createdAt:
          title: created_at
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: CreateMessageRequest
      additionalProperties: false
    svrelay.public.CreateMessageResponse:
      type: object
      properties:
        messageId:
          type: string
          title: message_id
      title: CreateMessageResponse
      additionalProperties: false
    svrelay.public.CreateTicketRequest:
      type: object
      properties:
        teamId:
          type: string
          title: team_id
        name:
          type: string
          title: name
        description:
          type: string
          title: description
        createdByUserId:
          type: string
          title: created_by_user_id
        createdAt:
          title: created_at
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        assignedToUserId:
          type: string
          title: assigned_to_user_id
          nullable: true
      title: CreateTicketRequest
      additionalProperties: false
    svrelay.public.CreateTicketResponse:
      type: object
      properties:
        ticketId:
          type: string
          title: ticket_id
      title: CreateTicketResponse
      additionalProperties: false
    svrelay.public.CreateUserRequest:
      type: object
      properties:
        firstName:
          type: string
          title: first_name
        lastName:
          type: string
          title: last_name
        email:
          type: string
          title: email
      title: CreateUserRequest
      additionalProperties: false
    svrelay.public.CreateUserResponse:
      type: object
      properties:
        userId:
          type: string
          title: user_id
      title: CreateUserResponse
      additionalProperties: false
    svrelay.public.GetUserRequest:
      type: object
      oneOf:
        - properties:
            email:
              type: string
              title: email
          title: email
          required:
            - email
        - properties:
            userId:
              type: string
              title: user_id
          title: user_id
          required:
            - userId
      title: GetUserRequest
      additionalProperties: false
    svrelay.public.GetUserResponse:
      type: object
      properties:
        userId:
          type: string
          title: user_id
        firstName:
          type: string
          title: first_name
        lastName:
          type: string
          title: last_name
        email:
          type: string
          title: email
      title: GetUserResponse
      additionalProperties: false
    svrelay.public.ListTicketsRequest:
      type: object
      properties:
        teamId:
          type: string
          title: team_id
        startTime:
          title: start_time
          description: both start and end timestamps are inclusive
          $ref: '#/components/schemas/google.protobuf.Timestamp'
        endTime:
          title: end_time
          $ref: '#/components/schemas/google.protobuf.Timestamp'
      title: ListTicketsRequest
      additionalProperties: false
    svrelay.public.ListTicketsResponse:
      type: object
      properties:
        tickets:
          type: array
          items:
            $ref: '#/components/schemas/svhelp.pubapimodels.Ticket'
          title: tickets
      title: ListTicketsResponse
      additionalProperties: false
    svrelay.public.User:
      type: object
      properties:
        firstName:
          type: string
          title: first_name
        lastName:
          type: string
          title: last_name
        email:
          type: string
          title: email
      title: User
      additionalProperties: false
    connect-protocol-version:
      type: number
      title: Connect-Protocol-Version
      enum:
        - 1
      description: Define the version of the Connect protocol
      const: 1
    connect-timeout-header:
      type: number
      title: Connect-Timeout-Ms
      description: Define the timeout, in ms
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - not_found
          enum:
            - canceled
            - unknown
            - invalid_argument
            - deadline_exceeded
            - not_found
            - already_exists
            - permission_denied
            - resource_exhausted
            - failed_precondition
            - aborted
            - out_of_range
            - unimplemented
            - internal
            - unavailable
            - data_loss
            - unauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        detail:
          $ref: '#/components/schemas/google.protobuf.Any'
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    google.protobuf.Any:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          format: binary
        debug:
          type: object
          additionalProperties: true
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
security: []
tags:
  - name: svrelay.public.PublicAPIService
